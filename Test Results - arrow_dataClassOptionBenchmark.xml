<?xml version="1.0" encoding="UTF-8"?><testrun duration="0" footerText="Generated by IntelliJ IDEA on 26/02/2023, 05:33" name="arrow [jvmBenchmarksBenchmark]">
    <count name="total" value="20"/>
    <count name="passed" value="20"/>
    <config configId="GradleRunConfiguration" name="arrow [jvmBenchmarksBenchmark]">
        <ExternalSystemSettings>
            <option name="executionName"/>
            <option name="externalProjectPath" value="/home/rwob-admin/IdeaProjects/arrow"/>
            <option name="externalSystemIdString" value="GRADLE"/>
            <option name="scriptParameters"/>
            <option name="taskDescriptions">
                <list/>
            </option>
            <option name="taskNames">
                <list>
                    <option value="jvmBenchmarksBenchmark"/>
                </list>
            </option>
            <option name="vmOptions"/>
        </ExternalSystemSettings>
        <ExternalSystemDebugServerProcess/>
        <ExternalSystemReattachDebugProcess/>
        <DebugAllEnabled/>
        <method v="2"/>
    </config>
    <suite duration="0" locationUrl="java:suite://" name="jvmBenchmarks" status="passed">
        <suite duration="0" locationUrl="java:suite://" name="option.OptionBenchmark" status="passed">
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/nestedOptions | iterations=100" name="nestedOptions | iterations=100" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.nestedOptions | iterations=100
Warm-up 1: 1090683.902 ops/s
Warm-up 2: 979455.204 ops/s
Warm-up 3: 1064337.548 ops/s
Warm-up 4: 1068058.673 ops/s
Warm-up 5: 1063736.932 ops/s
Iteration 1: 1068189.634 ops/s
Iteration 2: 1054323.342 ops/s
Iteration 3: 1057524.357 ops/s
Iteration 4: 1056607.656 ops/s
Iteration 5: 1069900.893 ops/s
1061309.176 ±(99.9%) 27659.669 ops/s [Average]
  (min, avg, max) = (1054323.342, 1061309.176, 1069900.893), stdev = 7183.128
  CI (99.9%): [1033649.507, 1088968.845] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/nestedOptions | iterations=1000" name="nestedOptions | iterations=1000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.nestedOptions | iterations=1000
Warm-up 1: 96226.796 ops/s
Warm-up 2: 102438.209 ops/s
Warm-up 3: 96892.779 ops/s
Warm-up 4: 97656.589 ops/s
Warm-up 5: 97539.565 ops/s
Iteration 1: 97622.782 ops/s
Iteration 2: 97487.967 ops/s
Iteration 3: 97215.765 ops/s
Iteration 4: 97924.317 ops/s
Iteration 5: 96912.835 ops/s
97432.733 ±(99.9%) 1489.102 ops/s [Average]
  (min, avg, max) = (96912.835, 97432.733, 97924.317), stdev = 386.715
  CI (99.9%): [95943.631, 98921.835] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/nestedOptions | iterations=10000" name="nestedOptions | iterations=10000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.nestedOptions | iterations=10000
Warm-up 1: 9205.995 ops/s
Warm-up 2: 10241.019 ops/s
Warm-up 3: 9824.016 ops/s
Warm-up 4: 9646.344 ops/s
Warm-up 5: 9807.616 ops/s
Iteration 1: 9761.906 ops/s
Iteration 2: 9789.138 ops/s
Iteration 3: 9769.271 ops/s
Iteration 4: 9811.825 ops/s
Iteration 5: 9763.876 ops/s
9779.203 ±(99.9%) 81.586 ops/s [Average]
  (min, avg, max) = (9761.906, 9779.203, 9811.825), stdev = 21.188
  CI (99.9%): [9697.618, 9860.789] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/nestedOptions | iterations=100000" name="nestedOptions | iterations=100000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.nestedOptions | iterations=100000
Warm-up 1: 911.646 ops/s
Warm-up 2: 963.784 ops/s
Warm-up 3: 968.402 ops/s
Warm-up 4: 965.561 ops/s
Warm-up 5: 963.168 ops/s
Iteration 1: 960.473 ops/s
Iteration 2: 962.715 ops/s
Iteration 3: 964.112 ops/s
Iteration 4: 962.075 ops/s
Iteration 5: 973.778 ops/s
964.631 ±(99.9%) 20.324 ops/s [Average]
  (min, avg, max) = (960.473, 964.631, 973.778), stdev = 5.278
  CI (99.9%): [944.306, 984.955] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/nestedOptions | iterations=1000000" name="nestedOptions | iterations=1000000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.nestedOptions | iterations=1000000
Warm-up 1: 91.267 ops/s
Warm-up 2: 96.498 ops/s
Warm-up 3: 96.213 ops/s
Warm-up 4: 96.754 ops/s
Warm-up 5: 95.813 ops/s
Iteration 1: 96.971 ops/s
Iteration 2: 96.568 ops/s
Iteration 3: 96.177 ops/s
Iteration 4: 96.191 ops/s
Iteration 5: 95.959 ops/s
96.373 ±(99.9%) 1.538 ops/s [Average]
  (min, avg, max) = (95.959, 96.373, 96.971), stdev = 0.399
  CI (99.9%): [94.835, 97.911] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/nestedOptionsBoxed | iterations=100" name="nestedOptionsBoxed | iterations=100" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.nestedOptionsBoxed | iterations=100
Warm-up 1: 379751.033 ops/s
Warm-up 2: 407218.555 ops/s
Warm-up 3: 424970.313 ops/s
Warm-up 4: 424089.468 ops/s
Warm-up 5: 423712.321 ops/s
Iteration 1: 424602.767 ops/s
Iteration 2: 425647.998 ops/s
Iteration 3: 425680.009 ops/s
Iteration 4: 423453.919 ops/s
Iteration 5: 423748.342 ops/s
424626.607 ±(99.9%) 3992.437 ops/s [Average]
  (min, avg, max) = (423453.919, 424626.607, 425680.009), stdev = 1036.823
  CI (99.9%): [420634.170, 428619.043] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/nestedOptionsBoxed | iterations=1000" name="nestedOptionsBoxed | iterations=1000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.nestedOptionsBoxed | iterations=1000
Warm-up 1: 38139.571 ops/s
Warm-up 2: 36466.706 ops/s
Warm-up 3: 37414.179 ops/s
Warm-up 4: 37584.963 ops/s
Warm-up 5: 37747.756 ops/s
Iteration 1: 37733.003 ops/s
Iteration 2: 37554.296 ops/s
Iteration 3: 37543.047 ops/s
Iteration 4: 37870.257 ops/s
Iteration 5: 37765.788 ops/s
37693.278 ±(99.9%) 544.710 ops/s [Average]
  (min, avg, max) = (37543.047, 37693.278, 37870.257), stdev = 141.459
  CI (99.9%): [37148.569, 38237.988] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/nestedOptionsBoxed | iterations=10000" name="nestedOptionsBoxed | iterations=10000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.nestedOptionsBoxed | iterations=10000
Warm-up 1: 4084.407 ops/s
Warm-up 2: 4253.827 ops/s
Warm-up 3: 4130.324 ops/s
Warm-up 4: 3660.529 ops/s
Warm-up 5: 3649.179 ops/s
Iteration 1: 3644.434 ops/s
Iteration 2: 3647.443 ops/s
Iteration 3: 3605.253 ops/s
Iteration 4: 3653.234 ops/s
Iteration 5: 3610.131 ops/s
3632.099 ±(99.9%) 86.909 ops/s [Average]
  (min, avg, max) = (3605.253, 3632.099, 3653.234), stdev = 22.570
  CI (99.9%): [3545.190, 3719.008] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/nestedOptionsBoxed | iterations=100000" name="nestedOptionsBoxed | iterations=100000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.nestedOptionsBoxed | iterations=100000
Warm-up 1: 390.987 ops/s
Warm-up 2: 420.838 ops/s
Warm-up 3: 418.380 ops/s
Warm-up 4: 417.077 ops/s
Warm-up 5: 418.318 ops/s
Iteration 1: 419.096 ops/s
Iteration 2: 420.431 ops/s
Iteration 3: 421.880 ops/s
Iteration 4: 421.262 ops/s
Iteration 5: 421.693 ops/s
420.872 ±(99.9%) 4.386 ops/s [Average]
  (min, avg, max) = (419.096, 420.872, 421.880), stdev = 1.139
  CI (99.9%): [416.487, 425.258] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/nestedOptionsBoxed | iterations=1000000" name="nestedOptionsBoxed | iterations=1000000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.nestedOptionsBoxed | iterations=1000000
Warm-up 1: 10.351 ops/s
Warm-up 2: 12.067 ops/s
Warm-up 3: 12.031 ops/s
Warm-up 4: 12.061 ops/s
Warm-up 5: 11.606 ops/s
Iteration 1: 12.084 ops/s
Iteration 2: 11.975 ops/s
Iteration 3: 11.546 ops/s
Iteration 4: 12.071 ops/s
Iteration 5: 12.084 ops/s
11.952 ±(99.9%) 0.892 ops/s [Average]
  (min, avg, max) = (11.546, 11.952, 12.084), stdev = 0.232
  CI (99.9%): [11.060, 12.844] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/noneComprehension | iterations=100" name="noneComprehension | iterations=100" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.noneComprehension | iterations=100
Warm-up 1: 98372.693 ops/s
Warm-up 2: 102783.028 ops/s
Warm-up 3: 102611.868 ops/s
Warm-up 4: 104055.319 ops/s
Warm-up 5: 99952.967 ops/s
Iteration 1: 103775.763 ops/s
Iteration 2: 103991.970 ops/s
Iteration 3: 104361.235 ops/s
Iteration 4: 104093.371 ops/s
Iteration 5: 104064.642 ops/s
104057.396 ±(99.9%) 810.610 ops/s [Average]
  (min, avg, max) = (103775.763, 104057.396, 104361.235), stdev = 210.513
  CI (99.9%): [103246.786, 104868.006] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/noneComprehension | iterations=1000" name="noneComprehension | iterations=1000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.noneComprehension | iterations=1000
Warm-up 1: 9916.206 ops/s
Warm-up 2: 10736.181 ops/s
Warm-up 3: 10698.695 ops/s
Warm-up 4: 10685.362 ops/s
Warm-up 5: 10571.944 ops/s
Iteration 1: 10725.041 ops/s
Iteration 2: 10706.937 ops/s
Iteration 3: 10708.721 ops/s
Iteration 4: 10691.487 ops/s
Iteration 5: 10483.608 ops/s
10663.159 ±(99.9%) 389.196 ops/s [Average]
  (min, avg, max) = (10483.608, 10663.159, 10725.041), stdev = 101.073
  CI (99.9%): [10273.963, 11052.355] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/noneComprehension | iterations=10000" name="noneComprehension | iterations=10000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.noneComprehension | iterations=10000
Warm-up 1: 984.875 ops/s
Warm-up 2: 1030.257 ops/s
Warm-up 3: 1038.198 ops/s
Warm-up 4: 1035.973 ops/s
Warm-up 5: 1036.249 ops/s
Iteration 1: 1034.368 ops/s
Iteration 2: 1031.508 ops/s
Iteration 3: 1032.702 ops/s
Iteration 4: 1037.131 ops/s
Iteration 5: 1035.357 ops/s
1034.213 ±(99.9%) 8.490 ops/s [Average]
  (min, avg, max) = (1031.508, 1034.213, 1037.131), stdev = 2.205
  CI (99.9%): [1025.723, 1042.704] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/noneComprehension | iterations=100000" name="noneComprehension | iterations=100000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.noneComprehension | iterations=100000
Warm-up 1: 94.882 ops/s
Warm-up 2: 99.682 ops/s
Warm-up 3: 100.562 ops/s
Warm-up 4: 99.738 ops/s
Warm-up 5: 100.162 ops/s
Iteration 1: 100.140 ops/s
Iteration 2: 100.397 ops/s
Iteration 3: 99.598 ops/s
Iteration 4: 100.440 ops/s
Iteration 5: 100.657 ops/s
100.246 ±(99.9%) 1.564 ops/s [Average]
  (min, avg, max) = (99.598, 100.246, 100.657), stdev = 0.406
  CI (99.9%): [98.682, 101.811] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/noneComprehension | iterations=1000000" name="noneComprehension | iterations=1000000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.noneComprehension | iterations=1000000
Warm-up 1: 9.280 ops/s
Warm-up 2: 9.847 ops/s
Warm-up 3: 9.794 ops/s
Warm-up 4: 9.817 ops/s
Warm-up 5: 9.813 ops/s
Iteration 1: 9.851 ops/s
Iteration 2: 9.688 ops/s
Iteration 3: 9.875 ops/s
Iteration 4: 9.823 ops/s
Iteration 5: 9.731 ops/s
9.794 ±(99.9%) 0.308 ops/s [Average]
  (min, avg, max) = (9.688, 9.794, 9.875), stdev = 0.080
  CI (99.9%): [9.485, 10.102] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/someComprehension | iterations=100" name="someComprehension | iterations=100" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.someComprehension | iterations=100
Warm-up 1: 92574.461 ops/s
Warm-up 2: 96971.945 ops/s
Warm-up 3: 97018.924 ops/s
Warm-up 4: 97510.275 ops/s
Warm-up 5: 96936.001 ops/s
Iteration 1: 97465.452 ops/s
Iteration 2: 96750.208 ops/s
Iteration 3: 97372.110 ops/s
Iteration 4: 96707.947 ops/s
Iteration 5: 97663.026 ops/s
97191.749 ±(99.9%) 1676.875 ops/s [Average]
  (min, avg, max) = (96707.947, 97191.749, 97663.026), stdev = 435.479
  CI (99.9%): [95514.873, 98868.624] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/someComprehension | iterations=1000" name="someComprehension | iterations=1000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.someComprehension | iterations=1000
Warm-up 1: 9409.360 ops/s
Warm-up 2: 9900.428 ops/s
Warm-up 3: 9882.635 ops/s
Warm-up 4: 9894.443 ops/s
Warm-up 5: 9919.030 ops/s
Iteration 1: 9897.644 ops/s
Iteration 2: 9944.943 ops/s
Iteration 3: 9866.703 ops/s
Iteration 4: 9926.781 ops/s
Iteration 5: 9752.516 ops/s
9877.718 ±(99.9%) 292.753 ops/s [Average]
  (min, avg, max) = (9752.516, 9877.718, 9944.943), stdev = 76.027
  CI (99.9%): [9584.964, 10170.471] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/someComprehension | iterations=10000" name="someComprehension | iterations=10000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.someComprehension | iterations=10000
Warm-up 1: 908.654 ops/s
Warm-up 2: 963.675 ops/s
Warm-up 3: 967.778 ops/s
Warm-up 4: 961.081 ops/s
Warm-up 5: 969.104 ops/s
Iteration 1: 967.059 ops/s
Iteration 2: 970.943 ops/s
Iteration 3: 964.700 ops/s
Iteration 4: 967.607 ops/s
Iteration 5: 962.556 ops/s
966.573 ±(99.9%) 12.185 ops/s [Average]
  (min, avg, max) = (962.556, 966.573, 970.943), stdev = 3.164
  CI (99.9%): [954.388, 978.758] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/someComprehension | iterations=100000" name="someComprehension | iterations=100000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.someComprehension | iterations=100000
Warm-up 1: 89.108 ops/s
Warm-up 2: 92.588 ops/s
Warm-up 3: 93.402 ops/s
Warm-up 4: 93.403 ops/s
Warm-up 5: 92.760 ops/s
Iteration 1: 92.869 ops/s
Iteration 2: 92.716 ops/s
Iteration 3: 91.839 ops/s
Iteration 4: 92.325 ops/s
Iteration 5: 92.740 ops/s
92.498 ±(99.9%) 1.621 ops/s [Average]
  (min, avg, max) = (91.839, 92.498, 92.869), stdev = 0.421
  CI (99.9%): [90.877, 94.119] (assumes normal distribution)
</output>
            </test>
            <test duration="0" locationUrl="java:test://option.OptionBenchmark/someComprehension | iterations=1000000" name="someComprehension | iterations=1000000" status="passed">
                <output type="stdout">jvmBenchmarks: option.OptionBenchmark.someComprehension | iterations=1000000
Warm-up 1: 8.651 ops/s
Warm-up 2: 9.015 ops/s
Warm-up 3: 9.036 ops/s
Warm-up 4: 9.049 ops/s
Warm-up 5: 9.025 ops/s
Iteration 1: 9.035 ops/s
Iteration 2: 9.014 ops/s
Iteration 3: 9.004 ops/s
Iteration 4: 9.013 ops/s
Iteration 5: 9.049 ops/s
9.023 ±(99.9%) 0.071 ops/s [Average]
  (min, avg, max) = (9.004, 9.023, 9.049), stdev = 0.018
  CI (99.9%): [8.952, 9.094] (assumes normal distribution)
</output>
            </test>
        </suite>
    </suite>
</testrun>
